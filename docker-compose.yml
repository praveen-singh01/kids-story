version: '3.8'

services:
  # Main API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/bedtime
      - REDIS_URL=redis://redis:6379
      - JWT_ACCESS_SECRET=dev_access_secret_change_in_production
      - JWT_REFRESH_SECRET=dev_refresh_secret_change_in_production
      - JWT_ACCESS_TTL=15m
      - JWT_REFRESH_TTL=30d
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-your_google_client_id.apps.googleusercontent.com}
      - CDN_BASE=https://cdn.example.com
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000
      - LOG_LEVEL=info
      - PAYMENTS_BASE_URL=http://payments-svc:4000/api/v1
      - SERVICE_M2M_SECRET=dev_m2m_secret_change_in_production
      - M2M_CORE_ISS=core
      - M2M_CORE_AUD_PAYMENTS=payments
      - M2M_PAYMENTS_ISS=payments
      - M2M_CORE_AUD=core
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB database
  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=bedtime
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # TODO: Redis temporarily disabled
  # redis:
  #   image: redis:7.2-alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s

  # MongoDB Express (optional, for development)
  mongo-express:
    image: mongo-express:1.0.0
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo
    restart: unless-stopped
    profiles:
      - dev

  # Redis Commander (optional, for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - dev

volumes:
  mongo_data:
    driver: local
  # TODO: Redis temporarily disabled
  # redis_data:
  #   driver: local

networks:
  default:
    name: bedtime-network
